<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BWz6/OO2L356x/8Yt/u0up/2/8ILw7/68tiZz448Z9ekmgX13776u0/88LHnn3/+jTfeOPB6AIC/zkFn
        Sk/Ptcs7x24f8sX/GPaN30y44I3aC/fW9bt88Oyvn7dz64O/fO7ne/bsOfA6AIC3wsFmSm4T59XuC+68
        pHrbkGt7ppz4vTNv2H7+uVdcs/uxx1944YXXX3/dLg8A8NYqYJrSvX//Iz94vHVLx6bn2r963Xceuueh
        Z3/6zGuvvbZ//36NAgC85QrIlKRF3uzu3vPKnl/9/Nf/8eJLvb8+UKAAAH8jhWVK8mf37/T+VaYAAH8j
        BWQKAMD/TzIFAAhKpgAAQckUACAomQIABCVTAICgZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJFAAgKJkC
        AAQlUwCAoGQKABCUTAEAgpIpAEBQMgUACEqmAABByRQAICiZAgAEJVMAgKBkCgAQlEwBAIKSKQBAUDIF
        AAhKpgAAQckUACAomQIABCVTAICgZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJFAAgKJkCAAQlUwCAoGQK
        ABCUTAEAgpIpAEBQMgUACEqmAABByRQAICiZAgAEJVMAgKBkCgAQlEwBAIKSKQBAUDIFAAhKpgAAQckU
        ACAomQIABCVTAICgZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJFAAgKJkCAAQlUwCAoGQKABCUTAEAgpIp
        AEBQMgUACEqmAABByRQAICiZAgAEJVMAgKBkCgAQlEwBAIKSKQBAUDIFAAhKpgAAQckUACAomQIABCVT
        AICgZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJFAAgKJkCAAQlUwCAoGQKABCUTAEAgpIpAEBQMgUACEqm
        AABByRQAICiZAgAEJVMAgKBkCgAQlEwBAIKSKQBAUDIFAAhKpgAAQckUACAomQIABCVTAICgZAoAEJRM
        AQCCkikAQFAyBQAISqYAAEHJFAAgKJkCAAQlUwCAoGQKABCUTAEAgpIpAEBQMgUACEqmAABByRQAICiZ
        AgAEJVMAgKBkCgAQlEwBAIKSKQBAUDIFAAhKpgAAQckUACAomQIABCVTAICgZAoAEJRMAQCCkikAQFAy
        BQAISqYAAEHJFAAgKJkCAAQlUwCAoGQKABCUTAEAgpIpAEBQMgUACEqmAABByRQAICiZAgAEJVMAgKBk
        CgAQlEwBAIKSKQBAUDIFAAhKpgAAQckUACAomQIABCVTAICgZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJ
        FAAgKJkCAAQlUwCAoGQKABCUTAEAgpIpAEBQMgUACEqmAABByRQAICiZAgAEJVMAgKBkCgAQlEwBAIKS
        KQBAUDIFAAhKpgAAQckUACAomQIABCVTAICgZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJFAAgKJkCAAQl
        UwCAoGQKABCUTAEAgpIpAEBQMgUACEqmAABByRQAICiZAgAEJVMAgKBkCgAQlEwBAIKSKQBAUDIFAAhK
        pgAAQckUACAomQIABCVTAICgZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJFAAgKJkCAAQlUwCAoGQKABCU
        TAEAgpIpAEBQMgUACEqmAABByRQAICiZAgAEJVMAgKBkCgAQlEwBAIKSKQBAUDIFAAhKpgAAQckUACAo
        mQIABCVTAICgZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJFAAgKJkCAAQlUwCAoGQKABCUTAEAgpIpAEBQ
        MgUACEqmAABByRQAICiZAgAEJVMAgKBkCgAQlEwBAIKSKQBAUDIFAAhKpgAAQckUACAomQIABCVTAICg
        ZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJFAAgKJkCAAQlUwCAoGQKABCUTAEAgpIpAEBQMgUACEqmAABB
        yRQAICiZAgAEJVMAgKBkCgAQlEwBAIKSKQBAUDIFAAhKpgAAQckUACAomQIABCVTAICgZAoAEJRMAQCC
        kikAQFAyBQAISqYAAEHJFAAgKJkCAAQlUwCAoGQKABCUTAEAgpIpAEBQMgUACEqmAABByRQAICiZAgAE
        JVMAgKBkCgAQlEwBAIKSKQBAUDIFAAhKpgAAQckUACAomQIABCVTAICgZAoAEJRMAQCCkikAQFAyBQAI
        SqYAAEHJFAAgKJkCAAQlUwCAoGQKABCUTAEAgpIpAEBQMgUACEqmAABByRQAICiZAgAEJVMAgKBkCgAQ
        lEwBAIKSKQBAUDIFAAhKpgAAQckUACAomQIABCVTAICgZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJFAAg
        KJkCAAQlUwCAoGQKABCUTAEAgpIpAEBQMgUACEqmAABByRQAICiZAgAEJVMAgKBkCgAQlEwBAIKSKQBA
        UDIFAAhKpgAAQckUACAomQIABCVTAICgZAoAEJRMAQCCkikAQFAyBQAISqYAAEHJFAAgKJkCAAQlUwCA
        oGQKABCUTAEAQurp+U9osLZmKDKiUwAAAABJRU5ErkJggg==
</value>
  </data>
</root>